{"version":3,"file":"static/js/261.4498297d.chunk.js","mappings":"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","sources":["components/Forms/Form.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","hooks/useContacts.js","components/Forms/AddContactForm.jsx","pages/Home.jsx","redux/contacts/selectors.js","redux/filter/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { BsTelephone } from 'react-icons/bs';\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n\n  font-weight: 700;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n  \n  color: currentColor;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:has(input:focus) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid var(--text-black-color);\n  padding: 8px 16px 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n`;\n\nexport const NameInputIcon = styled(AiOutlineUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const EmailInputIcon = styled(AiOutlineMail)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const PasswordInputIcon = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const NumberInputIcon = styled(BsTelephone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 140px;\n  border-radius: 18px;\n  border: 2px solid var(--blue-color);\n  padding: 8px 16px;\n  margin: 0 auto;\n\n  color: var(--blue-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration)\n  var(--transition-timing-function), background-color var(--transition-duration)\n  var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n  color: var(--white-color);\n  background-color: var(--blue-color);\n`;\n\nexport const Error = styled.p`\n  padding: 4px;\n\n  font-weight: 500;\n\n  color: var(--error-color);\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  padding: 40px 20px;\n\n  background-color: var(--white-color);\n  box-shadow: var(--box-shadow);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 28px;\n\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n\n  return contacts;\n};\n\nexport const useVisibleContacts = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return visibleContacts;\n};\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { toast } from 'react-hot-toast';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { useContacts } from 'hooks/useContacts';\nimport { addContact } from 'redux/contacts/operations';\nimport { contactSchema, isIncludesContact } from 'helpers/helpers';\nimport {\n  Error,\n  Label,\n  NameInputIcon,\n  NumberInputIcon,\n  StyledInput,\n  SubmitButton,\n  WrapperInput,\n} from './Form.styled';\n\nexport const AddContactForm = () => {\n  const contacts = useContacts();\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    if (isIncludesContact(contacts, name, number)) {\n      return;\n    }\n\n    dispatch(addContact({ name, number }))\n      .unwrap()\n      .then(resp => {\n        toast.remove();\n        toast.success(`${name} added to contacts`);\n      })\n      .catch(error => {\n        toast.remove();\n        toast.error('Oops, something went wrong. Try again.');\n      });\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={onSubmit}\n      validationSchema={contactSchema}\n    >\n      <Form>\n        <Label>\n          Name\n          <WrapperInput>\n            <StyledInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name Last name\"\n            />\n            <NameInputIcon size={18} />\n          </WrapperInput>\n          <ErrorMessage name=\"name\" component={Error} />\n        </Label>\n\n        <Label>\n          Number\n          <WrapperInput>\n            <StyledInput type=\"tel\" name=\"number\" placeholder=\"000-00-00\" />\n            <NumberInputIcon />\n          </WrapperInput>\n          <ErrorMessage name=\"number\" component={Error} />\n        </Label>\n\n        <SubmitButton type=\"submit\">\n          <IoMdPersonAdd size={20} />\n          Add contact\n        </SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Section } from 'components/Section/Section';\nimport { AddContactForm } from 'components/Forms/AddContactForm';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <main>\n      <Section title=\"Add contact\">\n        <AddContactForm />\n      </Section>\n\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilterValue } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n","export const selectFilterValue = state => state.filter.value;\n"],"names":["Label","styled","WrapperInput","StyledInput","Field","NameInputIcon","AiOutlineUser","EmailInputIcon","AiOutlineMail","PasswordInputIcon","RiLockPasswordLine","NumberInputIcon","BsTelephone","SubmitButton","Error","Wrapper","Title","Section","title","children","useContacts","useSelector","selectContacts","useVisibleContacts","selectVisibleContacts","AddContactForm","contacts","dispatch","useDispatch","initialValues","name","number","onSubmit","resetForm","isIncludesContact","addContact","unwrap","then","resp","toast","catch","error","validationSchema","contactSchema","type","placeholder","size","component","isLoading","selectIsLoading","Loader","state","items","selectError","createSelector","selectFilterValue","filter","contact","toLowerCase","includes","value"],"sourceRoot":""}