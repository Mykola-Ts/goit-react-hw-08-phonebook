{"version":3,"file":"static/js/68.cd3d7a78.chunk.js","mappings":"gSAiBaA,GAAgBC,EAAAA,EAAAA,IAAO,CAClCC,MAAMC,EAAAA,EAAAA,MACHC,SAAS,2BACTC,QACC,+HAHE,gJAOHC,IACC,EACA,sEAEDC,OACHC,QAAQL,EAAAA,EAAAA,MACLC,SAAS,2BACTC,QACC,yCACA,iGAEDC,IACC,EACA,0EAEDG,IACC,GACA,2EAIOC,EAAiB,WAC5B,IAAMC,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MAmCjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEb,KAAM,GAAIM,OAAQ,IACnCQ,SApCa,SAAC,EAAD,GAAsC,IAAnCd,EAAkC,EAAlCA,KAAMM,EAA4B,EAA5BA,OAAYS,EAAgB,EAAhBA,UAC9BC,EAAiBP,EAASQ,MAC9B,SAAAC,GAAO,OAAIA,EAAQlB,KAAKmB,gBAAkBnB,EAAKmB,aAAxC,IAEHC,EAAmBX,EAASQ,MAChC,SAAAC,GAAO,OAAIA,EAAQZ,SAAWA,CAAvB,IAGT,GAAIU,GAAkBI,EAAkB,CACtC,IAAMC,EAAW,UACfL,EAAiBhB,EAAH,iBAAoBM,GADnB,2BAOjB,OAHAgB,EAAAA,GAAAA,cACAA,EAAAA,GAAAA,MAAYD,EAGb,CAEDV,GAASY,EAAAA,EAAAA,IAAW,CAAEvB,KAAAA,EAAMM,OAAAA,KACzBkB,SACAC,MAAK,SAAAC,GACJJ,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,QAAA,UAAiBtB,EAAjB,sBACD,IACA2B,OAAM,SAAAC,GACLN,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,MAAY,yCACb,IAEHP,GACD,EAMGc,iBAAkB/B,EAHpB,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,WAAO,QAEL,UAAC,KAAD,YACE,SAAC,KAAD,CACEgC,KAAK,OACL9B,KAAK,OACL+B,YAAY,0BAEd,SAAC,KAAD,CAAeC,KAAM,SAEvB,SAAC,KAAD,CAAchC,KAAK,OAAOiC,UAAWC,EAAAA,SAGvC,UAAC,KAAD,WAAO,UAEL,UAAC,KAAD,YACE,SAAC,KAAD,CAAaJ,KAAK,MAAM9B,KAAK,SAAS+B,YAAY,eAClD,SAAC,KAAD,QAEF,SAAC,KAAD,CAAc/B,KAAK,SAASiC,UAAWC,EAAAA,SAGzC,UAAC,KAAD,CAAcJ,KAAK,SAAnB,WACE,SAAC,MAAD,CAAeE,KAAM,KAAM,qBAMpC,C,wUCjHYG,EAAQC,EAAAA,GAAAA,MAAH,4FAQLC,EAAeD,EAAAA,GAAAA,IAAH,kMAUZE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yeAqBXI,GAAgBJ,EAAAA,EAAAA,IAAOK,EAAAA,IAAPL,CAAH,0GAObM,GAAiBN,EAAAA,EAAAA,IAAOO,EAAAA,IAAPP,CAAH,0GAOdQ,GAAoBR,EAAAA,EAAAA,IAAOS,EAAAA,IAAPT,CAAH,0GAOjBU,GAAkBV,EAAAA,EAAAA,IAAOW,EAAAA,IAAPX,CAAH,0GAOfY,EAAeZ,EAAAA,GAAAA,OAAH,ikBAwBZF,EAAQE,EAAAA,GAAAA,EAAH,+F,kFC/FLa,EAAUb,EAAAA,GAAAA,IAAH,mKASPc,EAAQd,EAAAA,GAAAA,GAAH,6K,UCRLe,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACJ,EAAD,WACGG,IAAS,SAACF,EAAD,UAAQE,IACjBC,IAGN,C,+ECPY3C,EAAc,WAGzB,OAFiB4C,EAAAA,EAAAA,IAAYC,EAAAA,GAG9B,C,wMCJYC,EAAcpB,EAAAA,GAAAA,MAAH,qEAMXC,EAAeD,EAAAA,GAAAA,IAAH,+CAIZqB,EAAcrB,EAAAA,GAAAA,MAAH,geAqBXsB,GAAatB,EAAAA,EAAAA,IAAOuB,EAAAA,IAAPvB,CAAH,0GAOVwB,EAAWxB,EAAAA,GAAAA,OAAH,qY,UC7BRyB,EAAS,WACpB,IAAMlD,GAAWC,EAAAA,EAAAA,MACXkD,GAASR,EAAAA,EAAAA,IAAYS,EAAAA,IAe3B,OACE,+BACE,UAACP,EAAD,WAAa,kCAEX,UAACnB,EAAD,YACE,SAACoB,EAAD,CACE3B,KAAK,OACLkC,MAAOF,EACP/B,YAAY,iBACZkC,SAtBO,SAAAC,GACf,IAAMF,EAAQE,EAAIC,cAAcH,MAAM3D,OAEtCM,GAASyD,EAAAA,EAAAA,GAAeJ,GACzB,KAoBO,SAACN,EAAD,IACCI,IACC,SAACF,EAAD,CAAU9B,KAAK,SAASuC,QApBlB,SAAAH,GACAA,EAAIC,cAAcG,QAAQ,SAClCC,QAAQP,MAAQ,GAEtBrD,GAASyD,EAAAA,EAAAA,GAAe,IACzB,EAeS,UACE,SAAC,MAAD,aAOb,E,8BChDYI,EAAcpC,EAAAA,GAAAA,EAAH,sEAMXqC,EAAgBrC,EAAAA,GAAAA,KAAH,+CAIbsC,EAAStC,EAAAA,GAAAA,OAAH,omB,iDCVNuC,EAAWvC,EAAAA,GAAAA,OAAH,ga,SCgBrBwC,IAAAA,cAAoB,SAEpB,I,UAAMC,EAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,UAAW,wBACXC,MAAO,OACPC,SAAU,QACVC,YAAa,SAIJC,EAAe,SAAC,GAA0C,IAAxCrE,EAAuC,EAAvCA,QAASsE,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC5C9E,GAAWC,EAAAA,EAAAA,MACT8E,EAAqBxE,EAArBwE,GAAI1F,EAAiBkB,EAAjBlB,KAAMM,EAAWY,EAAXZ,OAiBlB,OACE,UAAC,IAAD,CACEqF,OAAQF,EACRG,eAAgBJ,EAChBK,MAAOhB,EACPiB,aAAa,gBAJf,WAME,SAAC,KAAD,CACEjF,cAAe,CAAEb,KAAAA,EAAMM,OAAAA,GACvBQ,SAxBW,SAAAiF,GACfpF,GACEqF,EAAAA,EAAAA,IAAY,CACVN,GAAAA,EACAO,cAAeF,KAInBP,GACD,EAgBK3D,iBAAkB/B,EAAAA,EAHpB,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,WAAO,QAEL,UAAC,KAAD,YACE,SAAC,KAAD,CACEgC,KAAK,OACL9B,KAAK,OACL+B,YAAY,0BAEd,SAAC,KAAD,CAAeC,KAAM,SAEvB,SAAC,KAAD,CAAchC,KAAK,OAAOiC,UAAWC,EAAAA,SAGvC,UAAC,KAAD,WAAO,UAEL,UAAC,KAAD,YACE,SAAC,KAAD,CAAaJ,KAAK,MAAM9B,KAAK,SAAS+B,YAAY,eAClD,SAAC,KAAD,QAEF,SAAC,KAAD,CAAc/B,KAAK,SAASiC,UAAWC,EAAAA,SAGzC,UAAC,KAAD,CAAcJ,KAAK,SAAnB,WACE,SAAC,MAAD,CAAQE,KAAM,KAAM,wBAK1B,SAAC2C,EAAD,CAAUN,QA7CE,WACdmB,GACD,EA2CG,UACE,SAAC,MAAD,QAIP,ECxFYU,EAAU,SAAC,GAAsB,IAAD,IAAnBhF,QAAAA,OAAmB,MAAT,CAAC,EAAQ,EAC3C,GAAsCiF,EAAAA,EAAAA,WAAS,GAA/C,eAAOV,EAAP,KAAoBW,EAApB,KACMzF,GAAWC,EAAAA,EAAAA,MAeXyF,EAAc,WAEbC,SAASC,KAAKV,MAAMW,SADzBf,EACoC,GACA,SAEpCW,GAAgBX,EACjB,EAEOC,EAAqBxE,EAArBwE,GAAI1F,EAAiBkB,EAAjBlB,KAAMM,EAAWY,EAAXZ,OAElB,OACE,iCACE,SAACkE,EAAD,oBAAiBxE,EAAjB,SACA,SAACyE,EAAD,UAAgBnE,KAEhB,UAACoE,EAAD,CAAQ5C,KAAK,SAASuC,QAASgC,EAA/B,WACE,SAAC,MAAD,CAAerE,KAAM,KAAM,WAI7B,UAAC0C,EAAD,CAAQ5C,KAAK,SAASuC,QAAS,kBAjClB,SAACqB,EAAI1F,GACpBW,GAAS8F,EAAAA,EAAAA,IAAcf,IACpBlE,SACAC,MAAK,SAAAC,GACJJ,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,QAAA,UAAiBtB,EAAjB,0BACD,IACA2B,OAAM,SAAAC,GACLN,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,MAAY,yCACb,GACJ,CAsBwCoF,CAAShB,EAAI1F,EAAnB,EAA/B,WACE,SAAC,MAAD,CAASgC,KAAM,KAAM,aAIvB,SAACuD,EAAD,CACErE,QAASA,EACTsE,WAAYa,EACZZ,YAAaA,MAIpB,ECzDYkB,EAAWvE,EAAAA,GAAAA,GAAH,0gBAyBRwE,EAAiBxE,EAAAA,GAAAA,EAAH,+CCtBdyE,EAAe,WAC1B,IAAMpG,GAAW6C,EAAAA,EAAAA,IAAYwD,EAAAA,IAE7B,OAAOrG,EAASsG,QACd,wBACGtG,EAASuG,KAAI,SAAA9F,GAAO,OACnB,SAACyF,EAAD,WACE,SAACT,EAAD,CAAShF,QAASA,KADLA,EAAQwE,GADJ,OAOvB,SAACkB,EAAD,UAAgB,0CAEnB,ECjBY3D,GAAUb,EAAAA,GAAAA,IAAH,yLAWP6E,GAAO7E,EAAAA,GAAAA,EAAH,qHCVJF,GAAQ,WACnB,OACE,UAACe,GAAD,YACE,SAAC,MAAD,CAAcjB,KAAM,MACpB,SAACiF,GAAD,UAAM,0DAGX,E,WCRYL,GAAiBxE,EAAAA,GAAAA,EAAH,+C,WCgD3B,GArCiB,WACf,IAAM3B,GAAWC,EAAAA,GAAAA,KACXwG,GAAY5D,EAAAA,EAAAA,IAAY6D,EAAAA,IACxBvF,GAAQ0B,EAAAA,EAAAA,IAAY8D,EAAAA,IACpBzG,GAAWC,EAAAA,EAAAA,MAWjB,OATAyG,EAAAA,EAAAA,YAAU,WACR1G,GAAS2G,EAAAA,EAAAA,OACN9F,SACAG,OAAM,SAAAC,GACLN,EAAAA,GAAAA,SACAA,EAAAA,GAAAA,MAAY,sDACb,GACJ,GAAE,CAACX,KAGF,0BACIiB,GAcA,SAACM,GAAD,KAbA,UAACiB,EAAA,EAAD,CAASC,MAAM,WAAf,UACG3C,EAASsG,OAAS,GACjB,iCACE,SAAClD,EAAD,KACA,SAACgD,EAAD,QAGF,SAAC,GAAD,UAAgB,gBAGjBK,IAAa,SAACK,GAAA,EAAD,QAOvB,C","sources":["components/Forms/AddContactForm.jsx","components/Forms/Form.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","hooks/useContacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/ContactModal/ContactModal.styled.js","components/ContactModal/ContactModal.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","pages/Contacts.styled.js","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { toast } from 'react-hot-toast';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { addContact } from 'redux/operations';\nimport {\n  Error,\n  Label,\n  NameInputIcon,\n  NumberInputIcon,\n  StyledInput,\n  SubmitButton,\n  WrapperInput,\n} from './Form.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const contactSchema = object({\n  name: string()\n    .required('This field is required!')\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]?[- ']*)*$\",\n      `Name may contain only letters, apostrophe, dash and spaces.\n      For example Adrian, Jacob Mercer Charles de Batz de Castelmore d'Artagnan`\n    )\n    .min(\n      2,\n      'The name is short! Please enter a name with at least 2 characters.'\n    )\n    .trim(),\n  number: string()\n    .required('This field is required!')\n    .matches(\n      /^(\\+?\\d+)?\\s*(\\(\\d+\\))?[\\s-]*([\\d-]*)$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.'\n    )\n    .min(\n      5,\n      'The number is short! Please enter a number with at least 5 characters.'\n    )\n    .max(\n      18,\n      'The number is long! Please enter a number with at more 18 characters.'\n    ),\n});\n\nexport const AddContactForm = () => {\n  const contacts = useContacts();\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    const isIncludesName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isIncludesNumber = contacts.find(\n      contact => contact.number === number\n    );\n\n    if (isIncludesName || isIncludesNumber) {\n      const warningText = `${\n        isIncludesName ? name : `Number ${number}`\n      } is already in contacts`;\n\n      toast.remove();\n      toast.error(warningText);\n\n      return;\n    }\n\n    dispatch(addContact({ name, number }))\n      .unwrap()\n      .then(resp => {\n        toast.remove();\n        toast.success(`${name} added to contacts`);\n      })\n      .catch(error => {\n        toast.remove();\n        toast.error('Oops, something went wrong. Try again.');\n      });\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={onSubmit}\n      validationSchema={contactSchema}\n    >\n      <Form>\n        <Label>\n          Name\n          <WrapperInput>\n            <StyledInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name Last name\"\n            />\n            <NameInputIcon size={18} />\n          </WrapperInput>\n          <ErrorMessage name=\"name\" component={Error} />\n        </Label>\n\n        <Label>\n          Number\n          <WrapperInput>\n            <StyledInput type=\"tel\" name=\"number\" placeholder=\"000-00-00\" />\n            <NumberInputIcon />\n          </WrapperInput>\n          <ErrorMessage name=\"number\" component={Error} />\n        </Label>\n\n        <SubmitButton type=\"submit\">\n          <IoMdPersonAdd size={20} />\n          Add contact\n        </SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { BsTelephone } from 'react-icons/bs';\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n\n  font-weight: 700;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:has(input:focus) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid var(--text-black-color);\n  padding: 8px 16px 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n`;\n\nexport const NameInputIcon = styled(AiOutlineUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const EmailInputIcon = styled(AiOutlineMail)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const PasswordInputIcon = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const NumberInputIcon = styled(BsTelephone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 140px;\n  border-radius: 18px;\n  border: 2px solid var(--blue-color);\n  padding: 8px 16px;\n  margin: 0 auto;\n\n  color: var(--blue-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration)\n  var(--transition-timing-function), background-color var(--transition-duration)\n  var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n  color: var(--white-color);\n  background-color: var(--blue-color);\n`;\n\nexport const Error = styled.p`\n  padding: 4px;\n\n  font-weight: 500;\n\n  color: var(--error-color);\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  padding: 40px 20px;\n\n  background-color: var(--white-color);\n  box-shadow: var(--box-shadow);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 28px;\n\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n\n  return contacts;\n};\n","import styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const FilterLabel = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid var(--text-black-color);\n  padding: 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n`;\n\nexport const SearchIcon = styled(BsSearch)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const ResetBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 8px;\n  transform: translateY(-50%);\n\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  border: none;\n\n  color: var(--black-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus) {\n    color: var(--blue-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { selectFilterValue } from 'redux/selectors';\nimport { filterContacts } from 'redux/filterSlice';\nimport {\n  FilterLabel,\n  FilterInput,\n  SearchIcon,\n  WrapperInput,\n  ResetBtn,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const onChange = evt => {\n    const value = evt.currentTarget.value.trim();\n\n    dispatch(filterContacts(value));\n  };\n\n  const onReset = evt => {\n    const label = evt.currentTarget.closest('label');\n    label.control.value = '';\n\n    dispatch(filterContacts(''));\n  };\n\n  return (\n    <>\n      <FilterLabel>\n        Find contact by name or number\n        <WrapperInput>\n          <FilterInput\n            type=\"text\"\n            value={filter}\n            placeholder=\"Name or number\"\n            onChange={onChange}\n          />\n          <SearchIcon />\n          {filter && (\n            <ResetBtn type=\"button\" onClick={onReset}>\n              <AiOutlineClose />\n            </ResetBtn>\n          )}\n        </WrapperInput>\n      </FilterLabel>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactInfo = styled.p`\n  margin-right: 12px;\n\n  font-weight: 700;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: auto;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 100px;\n  border-radius: 18px;\n  border: 1px solid var(--text-black-color);\n  padding: 8px 12px;\n\n  color: currentColor;\n  background-color: transparent;\n\n  transition: color var(--transition-duration) var(--transition-timing-function),\n    border-color var(--transition-duration) var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n    color: var(--red-color);\n    border-color: var(--red-color);\n  }\n\n  &:not(:last-child) {\n    margin-right: 12px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 0;\n  border: 1px solid transparent;\n  border-radius: 50px;\n\n  background-color: transparent;\n\n  transition: color var(--transition-duration)\n  var(--transition-timing-function);\n\n    &:is(:hover, :focus, :active) {\n  color: var(--blue-color);\n`;\n","import { useDispatch } from 'react-redux';\nimport Modal from 'react-modal';\nimport { ErrorMessage, Form, Formik } from 'formik';\nimport { BiSave } from 'react-icons/bi';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { editContact } from 'redux/operations';\nimport { contactSchema } from 'components/Forms/AddContactForm';\nimport { CloseBtn } from './ContactModal.styled';\nimport {\n  Error,\n  Label,\n  NameInputIcon,\n  NumberInputIcon,\n  StyledInput,\n  SubmitButton,\n  WrapperInput,\n} from 'components/Forms/Form.styled';\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    transform: 'translate(-50%, -50%)',\n    width: '100%',\n    maxWidth: '600px',\n    marginRight: '-50%',\n  },\n};\n\nexport const ContactModal = ({ contact, closeModal, modalIsOpen }) => {\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n\n  const onSubmit = values => {\n    dispatch(\n      editContact({\n        id,\n        editedContact: values,\n      })\n    );\n\n    closeModal();\n  };\n\n  const onClose = () => {\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Contact Modal\"\n    >\n      <Formik\n        initialValues={{ name, number }}\n        onSubmit={onSubmit}\n        validationSchema={contactSchema}\n      >\n        <Form>\n          <Label>\n            Name\n            <WrapperInput>\n              <StyledInput\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First name Last name\"\n              />\n              <NameInputIcon size={18} />\n            </WrapperInput>\n            <ErrorMessage name=\"name\" component={Error} />\n          </Label>\n\n          <Label>\n            Number\n            <WrapperInput>\n              <StyledInput type=\"tel\" name=\"number\" placeholder=\"000-00-00\" />\n              <NumberInputIcon />\n            </WrapperInput>\n            <ErrorMessage name=\"number\" component={Error} />\n          </Label>\n\n          <SubmitButton type=\"submit\">\n            <BiSave size={20} />\n            Save changes\n          </SubmitButton>\n        </Form>\n      </Formik>\n      <CloseBtn onClick={onClose}>\n        <AiOutlineClose />\n      </CloseBtn>\n    </Modal>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { GoTrash } from 'react-icons/go';\nimport { MdOutlineEdit } from 'react-icons/md';\nimport { deleteContact } from 'redux/operations';\nimport { Button, ContactInfo, ContactNumber } from './Contact.styled';\nimport { ContactModal } from 'components/ContactModal/ContactModal';\n\nexport const Contact = ({ contact = {} }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const onDelete = (id, name) => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(resp => {\n        toast.remove();\n        toast.success(`${name} deleted from contacts`);\n      })\n      .catch(error => {\n        toast.remove();\n        toast.error('Oops, something went wrong. Try again.');\n      });\n  };\n\n  const toggleModal = () => {\n    modalIsOpen\n      ? (document.body.style.overflow = '')\n      : (document.body.style.overflow = 'hidden');\n\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const { id, name, number } = contact;\n\n  return (\n    <>\n      <ContactInfo>{`${name}: `}</ContactInfo>\n      <ContactNumber>{number}</ContactNumber>\n\n      <Button type=\"button\" onClick={toggleModal}>\n        <MdOutlineEdit size={20} />\n        Edit\n      </Button>\n\n      <Button type=\"button\" onClick={() => onDelete(id, name)}>\n        <GoTrash size={20} />\n        Delete\n      </Button>\n\n      <ContactModal\n        contact={contact}\n        closeModal={toggleModal}\n        modalIsOpen={modalIsOpen}\n      />\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  transform: scale(1, 1);\n\n  display: flex;\n  align-items: center;\n\n  border-radius: 8px;\n  border: 2px solid rgb(228 228 228);\n  padding: 16px 20px;\n\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n\n  transition: transform var(--transition-duration)\n    var(--transition-timing-function);\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  &:is(:hover) {\n    transform: scale(1.02, 1.1);\n  }\n`;\n\nexport const NoContactsText = styled.p`\n  text-align: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { ListItem, NoContactsText } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return contacts.length ? (\n    <ul>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          <Contact contact={contact} />\n        </ListItem>\n      ))}\n    </ul>\n  ) : (\n    <NoContactsText>No contacts found for the entered name</NoContactsText>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n\n  width: 100%;\n  height: calc(100vh - 134px);\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 18px;\n  line-height: 1.33;\n  letter-spacing: -0.36px;\n`;\n","import { BsEmojiFrown } from 'react-icons/bs';\nimport { Text, Wrapper } from './Error.styled';\n\nexport const Error = () => {\n  return (\n    <Wrapper>\n      <BsEmojiFrown size={64} />\n      <Text>Oops, something went wrong. Try reloading the page.</Text>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NoContactsText = styled.p`\n  text-align: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { Section } from 'components/Section/Section';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Error } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport { NoContactsText } from './Contacts.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nconst Contacts = () => {\n  const contacts = useContacts();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n      .unwrap()\n      .catch(error => {\n        toast.remove();\n        toast.error('Oops, something went wrong. Try reloading the page.');\n      });\n  }, [dispatch]);\n\n  return (\n    <main>\n      {!error ? (\n        <Section title=\"Contacts\">\n          {contacts.length > 0 ? (\n            <>\n              <Filter />\n              <ContactsList />\n            </>\n          ) : (\n            <NoContactsText>No contacts</NoContactsText>\n          )}\n\n          {isLoading && <Loader />}\n        </Section>\n      ) : (\n        <Error />\n      )}\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["contactSchema","object","name","string","required","matches","min","trim","number","max","AddContactForm","contacts","useContacts","dispatch","useDispatch","initialValues","onSubmit","resetForm","isIncludesName","find","contact","toLowerCase","isIncludesNumber","warningText","toast","addContact","unwrap","then","resp","catch","error","validationSchema","type","placeholder","size","component","Error","Label","styled","WrapperInput","StyledInput","Field","NameInputIcon","AiOutlineUser","EmailInputIcon","AiOutlineMail","PasswordInputIcon","RiLockPasswordLine","NumberInputIcon","BsTelephone","SubmitButton","Wrapper","Title","Section","title","children","useSelector","selectContacts","FilterLabel","FilterInput","SearchIcon","BsSearch","ResetBtn","Filter","filter","selectFilterValue","value","onChange","evt","currentTarget","filterContacts","onClick","closest","control","ContactInfo","ContactNumber","Button","CloseBtn","Modal","customStyles","content","top","left","right","bottom","transform","width","maxWidth","marginRight","ContactModal","closeModal","modalIsOpen","id","isOpen","onRequestClose","style","contentLabel","values","editContact","editedContact","Contact","useState","setModalIsOpen","toggleModal","document","body","overflow","deleteContact","onDelete","ListItem","NoContactsText","ContactsList","selectVisibleContacts","length","map","Text","isLoading","selectIsLoading","selectError","useEffect","fetchContacts","Loader"],"sourceRoot":""}