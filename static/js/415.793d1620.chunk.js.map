{"version":3,"file":"static/js/415.793d1620.chunk.js","mappings":"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","sources":["components/Forms/AddContactForm.jsx","components/Forms/Form.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","hooks/useContacts.js","pages/Home.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { toast } from 'react-hot-toast';\nimport { IoMdPersonAdd } from 'react-icons/io';\nimport { addContact } from 'redux/operations';\nimport {\n  Error,\n  Label,\n  NameInputIcon,\n  NumberInputIcon,\n  StyledInput,\n  SubmitButton,\n  WrapperInput,\n} from './Form.styled';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const contactSchema = object({\n  name: string()\n    .required('This field is required!')\n    .matches(\n      \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]?[- ']*)*$\",\n      `Name may contain only letters, apostrophe, dash and spaces.\n      For example Adrian, Jacob Mercer Charles de Batz de Castelmore d'Artagnan`\n    )\n    .min(\n      2,\n      'The name is short! Please enter a name with at least 2 characters.'\n    )\n    .trim(),\n  number: string()\n    .required('This field is required!')\n    .matches(\n      /^(\\+?\\d+)?\\s*(\\(\\d+\\))?[\\s-]*([\\d-]*)$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.'\n    )\n    .min(\n      5,\n      'The number is short! Please enter a number with at least 5 characters.'\n    )\n    .max(\n      18,\n      'The number is long! Please enter a number with at more 18 characters.'\n    ),\n});\n\nexport const AddContactForm = () => {\n  const contacts = useContacts();\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }, { resetForm }) => {\n    const isIncludesName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isIncludesNumber = contacts.find(\n      contact => contact.number === number\n    );\n\n    if (isIncludesName || isIncludesNumber) {\n      const warningText = `${\n        isIncludesName ? name : `Number ${number}`\n      } is already in contacts`;\n\n      toast.remove();\n      toast.error(warningText);\n\n      return;\n    }\n\n    dispatch(addContact({ name, number }))\n      .unwrap()\n      .then(resp => {\n        toast.remove();\n        toast.success(`${name} added to contacts`);\n      })\n      .catch(error => {\n        toast.remove();\n        toast.error('Oops, something went wrong. Try again.');\n      });\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={onSubmit}\n      validationSchema={contactSchema}\n    >\n      <Form>\n        <Label>\n          Name\n          <WrapperInput>\n            <StyledInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First name Last name\"\n            />\n            <NameInputIcon size={18} />\n          </WrapperInput>\n          <ErrorMessage name=\"name\" component={Error} />\n        </Label>\n\n        <Label>\n          Number\n          <WrapperInput>\n            <StyledInput type=\"tel\" name=\"number\" placeholder=\"000-00-00\" />\n            <NumberInputIcon />\n          </WrapperInput>\n          <ErrorMessage name=\"number\" component={Error} />\n        </Label>\n\n        <SubmitButton type=\"submit\">\n          <IoMdPersonAdd size={20} />\n          Add contact\n        </SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { AiOutlineUser, AiOutlineMail } from 'react-icons/ai';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { BsTelephone } from 'react-icons/bs';\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 28px;\n\n  font-weight: 700;\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n\n  transition: color var(--transition-duration) var(--transition-timing-function);\n\n  &:has(input:focus) {\n    color: var(--blue-color);\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid var(--text-black-color);\n  padding: 8px 16px 8px 32px;\n  margin-top: 8px;\n\n  outline: 2px solid transparent;\n\n  transition: border-color var(--transition-duration)\n      var(--transition-timing-function),\n    outline-color var(--transition-duration) var(--transition-timing-function);\n\n  &:focus {\n    border-color: transparent;\n    outline-color: var(--blue-color);\n  }\n`;\n\nexport const NameInputIcon = styled(AiOutlineUser)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const EmailInputIcon = styled(AiOutlineMail)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const PasswordInputIcon = styled(RiLockPasswordLine)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const NumberInputIcon = styled(BsTelephone)`\n  position: absolute;\n  top: 50%;\n  left: 8px;\n  transform: translateY(-50%);\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  min-width: 140px;\n  border-radius: 18px;\n  border: 2px solid var(--blue-color);\n  padding: 8px 16px;\n  margin: 0 auto;\n\n  color: var(--blue-color);\n  background-color: transparent;\n\n  transition: color var(--transition-duration)\n  var(--transition-timing-function), background-color var(--transition-duration)\n  var(--transition-timing-function);\n\n  &:is(:hover, :focus, :active) {\n  color: var(--white-color);\n  background-color: var(--blue-color);\n`;\n\nexport const Error = styled.p`\n  padding: 4px;\n\n  font-weight: 500;\n\n  color: var(--error-color);\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  padding: 40px 20px;\n\n  background-color: var(--white-color);\n  box-shadow: var(--box-shadow);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 28px;\n\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.96px;\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n\n  return contacts;\n};\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/selectors';\nimport { Section } from 'components/Section/Section';\nimport { AddContactForm } from 'components/Forms/AddContactForm';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <main>\n      <Section title=\"Add contact\">\n        <AddContactForm />\n      </Section>\n\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["contactSchema","object","name","string","required","matches","min","trim","number","max","AddContactForm","contacts","useContacts","dispatch","useDispatch","initialValues","onSubmit","resetForm","isIncludesName","find","contact","toLowerCase","isIncludesNumber","warningText","toast","addContact","unwrap","then","resp","catch","error","validationSchema","type","placeholder","size","component","Error","Label","styled","WrapperInput","StyledInput","Field","NameInputIcon","AiOutlineUser","EmailInputIcon","AiOutlineMail","PasswordInputIcon","RiLockPasswordLine","NumberInputIcon","BsTelephone","SubmitButton","Wrapper","Title","Section","title","children","useSelector","selectContacts","isLoading","selectIsLoading"],"sourceRoot":""}